// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// OperatorMonitorReport operator monitor report
//
// swagger:model operator-monitor-report
type OperatorMonitorReport struct {

	// Unique name of the operator.
	// Required: true
	OperatorName *string `json:"operator_name"`

	// report
	// Required: true
	Report *OperatorReport `json:"report"`
}

// Validate validates this operator monitor report
func (m *OperatorMonitorReport) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateOperatorName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateReport(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OperatorMonitorReport) validateOperatorName(formats strfmt.Registry) error {

	if err := validate.Required("operator_name", "body", m.OperatorName); err != nil {
		return err
	}

	return nil
}

func (m *OperatorMonitorReport) validateReport(formats strfmt.Registry) error {

	if err := validate.Required("report", "body", m.Report); err != nil {
		return err
	}

	if m.Report != nil {
		if err := m.Report.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("report")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OperatorMonitorReport) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OperatorMonitorReport) UnmarshalBinary(b []byte) error {
	var res OperatorMonitorReport
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
